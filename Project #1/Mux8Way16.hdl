// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/1/Mux8Way16.hdl
/**
 * 8-way 16-bit multiplexor:
 * out = a if sel = 000
 *       b if sel = 001
 *       c if sel = 010
 *       d if sel = 011
 *       e if sel = 100
 *       f if sel = 101
 *       g if sel = 110
 *       h if sel = 111
 */
CHIP Mux8Way16 {
    IN a[16], b[16], c[16], d[16],
       e[16], f[16], g[16], h[16],
       sel[3];
    OUT out[16];

    PARTS:
    // Three-layers architecture
    // First layer: Mux gates combining layer11(a,b) , layer12(c,d) , layer13(e,f) , layer14(g,h)
    // Second layer : Mux gates to filter the output from first layer : layer21(layer11,layer12) , layer22(layer13,layer14)
    // Third layer : Mux gate for the output (layer21,layer22)
    // Each gate output 1 bus consisting of 16 bits, the flow goes as follows:
    // Mux(16,16,1) , Mux(16,16,1) , Mux(16,16,1) ,Mux(16,16,1) ->Mux(16,16,1) Mux(16,16,1) -> Mux(16,16,1)

    // First Layer :
    // Mux(a,b,sel[0])

    Mux(a=a[0],b=b[0],sel=sel[0],out=layer1ABoutbin0);
    Mux(a=a[1],b=b[1],sel=sel[0],out=layer1ABoutbin1);
    Mux(a=a[2],b=b[2],sel=sel[0],out=layer1ABoutbin2);
    Mux(a=a[3],b=b[3],sel=sel[0],out=layer1ABoutbin3);
    Mux(a=a[4],b=b[4],sel=sel[0],out=layer1ABoutbin4);
    Mux(a=a[5],b=b[5],sel=sel[0],out=layer1ABoutbin5);
    Mux(a=a[6],b=b[6],sel=sel[0],out=layer1ABoutbin6);
    Mux(a=a[7],b=b[7],sel=sel[0],out=layer1ABoutbin7);
    Mux(a=a[8],b=b[8],sel=sel[0],out=layer1ABoutbin8);
    Mux(a=a[9],b=b[9],sel=sel[0],out=layer1ABoutbin9);
    Mux(a=a[10],b=b[10],sel=sel[0],out=layer1ABoutbin10);
    Mux(a=a[11],b=b[11],sel=sel[0],out=layer1ABoutbin11);
    Mux(a=a[12],b=b[12],sel=sel[0],out=layer1ABoutbin12);
    Mux(a=a[13],b=b[13],sel=sel[0],out=layer1ABoutbin13);
    Mux(a=a[14],b=b[14],sel=sel[0],out=layer1ABoutbin14);
    Mux(a=a[15],b=b[15],sel=sel[0],out=layer1ABoutbin15);

    // Mux (c,d,sel[0])

    Mux(a=c[0],b=d[0],sel=sel[0],out=layer1CDoutbin0);
    Mux(a=c[1],b=d[1],sel=sel[0],out=layer1CDoutbin1);
    Mux(a=c[2],b=d[2],sel=sel[0],out=layer1CDoutbin2);
    Mux(a=c[3],b=d[3],sel=sel[0],out=layer1CDoutbin3);
    Mux(a=c[4],b=d[4],sel=sel[0],out=layer1CDoutbin4);
    Mux(a=c[5],b=d[5],sel=sel[0],out=layer1CDoutbin5);
    Mux(a=c[6],b=d[6],sel=sel[0],out=layer1CDoutbin6);
    Mux(a=c[7],b=d[7],sel=sel[0],out=layer1CDoutbin7);
    Mux(a=c[8],b=d[8],sel=sel[0],out=layer1CDoutbin8);
    Mux(a=c[9],b=d[9],sel=sel[0],out=layer1CDoutbin9);
    Mux(a=c[10],b=d[10],sel=sel[0],out=layer1CDoutbin10);
    Mux(a=c[11],b=d[11],sel=sel[0],out=layer1CDoutbin11);
    Mux(a=c[12],b=d[12],sel=sel[0],out=layer1CDoutbin12);
    Mux(a=c[13],b=d[13],sel=sel[0],out=layer1CDoutbin13);
    Mux(a=c[14],b=d[14],sel=sel[0],out=layer1CDoutbin14);
    Mux(a=c[15],b=d[15],sel=sel[0],out=layer1CDoutbin15);

    // Mux(e,f,sel[0])

   Mux(a=e[0],b=f[0],sel=sel[0],out=layer1EFoutbin0);
   Mux(a=e[1],b=f[1],sel=sel[0],out=layer1EFoutbin1);
   Mux(a=e[2],b=f[2],sel=sel[0],out=layer1EFoutbin2);
   Mux(a=e[3],b=f[3],sel=sel[0],out=layer1EFoutbin3);
   Mux(a=e[4],b=f[4],sel=sel[0],out=layer1EFoutbin4);
   Mux(a=e[5],b=f[5],sel=sel[0],out=layer1EFoutbin5);
   Mux(a=e[6],b=f[6],sel=sel[0],out=layer1EFoutbin6);
   Mux(a=e[7],b=f[7],sel=sel[0],out=layer1EFoutbin7);
   Mux(a=e[8],b=f[8],sel=sel[0],out=layer1EFoutbin8);
   Mux(a=e[9],b=f[9],sel=sel[0],out=layer1EFoutbin9);
   Mux(a=e[10],b=f[10],sel=sel[0],out=layer1EFoutbin10);
   Mux(a=e[11],b=f[11],sel=sel[0],out=layer1EFoutbin11);
   Mux(a=e[12],b=f[12],sel=sel[0],out=layer1EFoutbin12);
   Mux(a=e[13],b=f[13],sel=sel[0],out=layer1EFoutbin13);
   Mux(a=e[14],b=f[14],sel=sel[0],out=layer1EFoutbin14);
   Mux(a=e[15],b=f[15],sel=sel[0],out=layer1EFoutbin15);

   // Mux(g,h,sel[0])

   Mux(a=g[0],b=h[0],sel=sel[0],out=layer1GHoutbin0);
   Mux(a=g[1],b=h[1],sel=sel[0],out=layer1GHoutbin1);
   Mux(a=g[2],b=h[2],sel=sel[0],out=layer1GHoutbin2);
   Mux(a=g[3],b=h[3],sel=sel[0],out=layer1GHoutbin3);
   Mux(a=g[4],b=h[4],sel=sel[0],out=layer1GHoutbin4);
   Mux(a=g[5],b=h[5],sel=sel[0],out=layer1GHoutbin5);
   Mux(a=g[6],b=h[6],sel=sel[0],out=layer1GHoutbin6);
   Mux(a=g[7],b=h[7],sel=sel[0],out=layer1GHoutbin7);
   Mux(a=g[8],b=h[8],sel=sel[0],out=layer1GHoutbin8);
   Mux(a=g[9],b=h[9],sel=sel[0],out=layer1GHoutbin9);
   Mux(a=g[10],b=h[10],sel=sel[0],out=layer1GHoutbin10);
   Mux(a=g[11],b=h[11],sel=sel[0],out=layer1GHoutbin11);
   Mux(a=g[12],b=h[12],sel=sel[0],out=layer1GHoutbin12);
   Mux(a=g[13],b=h[13],sel=sel[0],out=layer1GHoutbin13);
   Mux(a=g[14],b=h[14],sel=sel[0],out=layer1GHoutbin14);
   Mux(a=g[15],b=h[15],sel=sel[0],out=layer1GHoutbin15);

   // Second Layer :
   // Mux(AB,CD,sel[1])
   
   Mux(a=layer1ABoutbin0,b=layer1CDoutbin0,sel=sel[1],out=layer21bin0);
   Mux(a=layer1ABoutbin1,b=layer1CDoutbin1,sel=sel[1],out=layer21bin1);
   Mux(a=layer1ABoutbin2,b=layer1CDoutbin2,sel=sel[1],out=layer21bin2);
   Mux(a=layer1ABoutbin3,b=layer1CDoutbin3,sel=sel[1],out=layer21bin3);
   Mux(a=layer1ABoutbin4,b=layer1CDoutbin4,sel=sel[1],out=layer21bin4);
   Mux(a=layer1ABoutbin5,b=layer1CDoutbin5,sel=sel[1],out=layer21bin5);
   Mux(a=layer1ABoutbin6,b=layer1CDoutbin6,sel=sel[1],out=layer21bin6);
   Mux(a=layer1ABoutbin7,b=layer1CDoutbin7,sel=sel[1],out=layer21bin7);
   Mux(a=layer1ABoutbin8,b=layer1CDoutbin8,sel=sel[1],out=layer21bin8);
   Mux(a=layer1ABoutbin9,b=layer1CDoutbin9,sel=sel[1],out=layer21bin9);
   Mux(a=layer1ABoutbin10,b=layer1CDoutbin10,sel=sel[1],out=layer21bin10);
   Mux(a=layer1ABoutbin11,b=layer1CDoutbin11,sel=sel[1],out=layer21bin11);
   Mux(a=layer1ABoutbin12,b=layer1CDoutbin12,sel=sel[1],out=layer21bin12);
   Mux(a=layer1ABoutbin13,b=layer1CDoutbin13,sel=sel[1],out=layer21bin13);
   Mux(a=layer1ABoutbin14,b=layer1CDoutbin14,sel=sel[1],out=layer21bin14);
   Mux(a=layer1ABoutbin15,b=layer1CDoutbin15,sel=sel[1],out=layer21bin15);

   // Mux(EF,GH,sel[1])

   Mux(a=layer1EFoutbin0,b=layer1GHoutbin0,sel=sel[1],out=layer22bin0);
   Mux(a=layer1EFoutbin1,b=layer1GHoutbin1,sel=sel[1],out=layer22bin1);
   Mux(a=layer1EFoutbin2,b=layer1GHoutbin2,sel=sel[1],out=layer22bin2);
   Mux(a=layer1EFoutbin3,b=layer1GHoutbin3,sel=sel[1],out=layer22bin3);
   Mux(a=layer1EFoutbin4,b=layer1GHoutbin4,sel=sel[1],out=layer22bin4);
   Mux(a=layer1EFoutbin5,b=layer1GHoutbin5,sel=sel[1],out=layer22bin5);
   Mux(a=layer1EFoutbin6,b=layer1GHoutbin6,sel=sel[1],out=layer22bin6);
   Mux(a=layer1EFoutbin7,b=layer1GHoutbin7,sel=sel[1],out=layer22bin7);
   Mux(a=layer1EFoutbin8,b=layer1GHoutbin8,sel=sel[1],out=layer22bin8);
   Mux(a=layer1EFoutbin9,b=layer1GHoutbin9,sel=sel[1],out=layer22bin9);
   Mux(a=layer1EFoutbin10,b=layer1GHoutbin10,sel=sel[1],out=layer22bin10);
   Mux(a=layer1EFoutbin11,b=layer1GHoutbin11,sel=sel[1],out=layer22bin11);
   Mux(a=layer1EFoutbin12,b=layer1GHoutbin12,sel=sel[1],out=layer22bin12);
   Mux(a=layer1EFoutbin13,b=layer1GHoutbin13,sel=sel[1],out=layer22bin13);
   Mux(a=layer1EFoutbin14,b=layer1GHoutbin14,sel=sel[1],out=layer22bin14);
   Mux(a=layer1EFoutbin15,b=layer1GHoutbin15,sel=sel[1],out=layer22bin15);

   // Third layer :
   // Mux(layer21,layer22,sel[2])

   Mux(a=layer21bin0,b=layer22bin0,sel=sel[2],out=out[0]);
   Mux(a=layer21bin1,b=layer22bin1,sel=sel[2],out=out[1]);
   Mux(a=layer21bin2,b=layer22bin2,sel=sel[2],out=out[2]);
   Mux(a=layer21bin3,b=layer22bin3,sel=sel[2],out=out[3]);
   Mux(a=layer21bin4,b=layer22bin4,sel=sel[2],out=out[4]);
   Mux(a=layer21bin5,b=layer22bin5,sel=sel[2],out=out[5]);
   Mux(a=layer21bin6,b=layer22bin6,sel=sel[2],out=out[6]);
   Mux(a=layer21bin7,b=layer22bin7,sel=sel[2],out=out[7]);
   Mux(a=layer21bin8,b=layer22bin8,sel=sel[2],out=out[8]);
   Mux(a=layer21bin9,b=layer22bin9,sel=sel[2],out=out[9]);
   Mux(a=layer21bin10,b=layer22bin10,sel=sel[2],out=out[10]);
   Mux(a=layer21bin11,b=layer22bin11,sel=sel[2],out=out[11]);
   Mux(a=layer21bin12,b=layer22bin12,sel=sel[2],out=out[12]);
   Mux(a=layer21bin13,b=layer22bin13,sel=sel[2],out=out[13]);
   Mux(a=layer21bin14,b=layer22bin14,sel=sel[2],out=out[14]);
   Mux(a=layer21bin15,b=layer22bin15,sel=sel[2],out=out[15]);


}