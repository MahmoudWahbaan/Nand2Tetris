// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/1/Mux4Way16.hdl
/**
 * 4-way 16-bit multiplexor:
 * out = a if sel = 00
 *       b if sel = 01
 *       c if sel = 10
 *       d if sel = 11
 */
CHIP Mux4Way16 {
    IN a[16], b[16], c[16], d[16], sel[2];
    OUT out[16];
    
    PARTS:
    // Two-layers architecture
    // First layer: Mux gates combining layer11(a,b) , layer12(c,d) 
    // Second layer : Mux gates to filter the output from first layer : layer21(layer11,layer12)
    // Each gate output 1 bus consisting of 16 bits, the flow goes as follows:
    // Mux(16,16,1) , Mux(16,16,1) -> Mux(16,16,1)
    
    // First Layer : 
    // Mux(a,b,sel[0])

    Mux(a=a[0],b=b[0],sel=sel[0],out=layer1ABoutbin0);
    Mux(a=a[1],b=b[1],sel=sel[0],out=layer1ABoutbin1);
    Mux(a=a[2],b=b[2],sel=sel[0],out=layer1ABoutbin2);
    Mux(a=a[3],b=b[3],sel=sel[0],out=layer1ABoutbin3);
    Mux(a=a[4],b=b[4],sel=sel[0],out=layer1ABoutbin4);
    Mux(a=a[5],b=b[5],sel=sel[0],out=layer1ABoutbin5);
    Mux(a=a[6],b=b[6],sel=sel[0],out=layer1ABoutbin6);
    Mux(a=a[7],b=b[7],sel=sel[0],out=layer1ABoutbin7);
    Mux(a=a[8],b=b[8],sel=sel[0],out=layer1ABoutbin8);
    Mux(a=a[9],b=b[9],sel=sel[0],out=layer1ABoutbin9);
    Mux(a=a[10],b=b[10],sel=sel[0],out=layer1ABoutbin10);
    Mux(a=a[11],b=b[11],sel=sel[0],out=layer1ABoutbin11);
    Mux(a=a[12],b=b[12],sel=sel[0],out=layer1ABoutbin12);
    Mux(a=a[13],b=b[13],sel=sel[0],out=layer1ABoutbin13);
    Mux(a=a[14],b=b[14],sel=sel[0],out=layer1ABoutbin14);
    Mux(a=a[15],b=b[15],sel=sel[0],out=layer1ABoutbin15);

    // Mux (c,d,sel[0])

    Mux(a=c[0],b=d[0],sel=sel[0],out=layer1CDoutbin0);
    Mux(a=c[1],b=d[1],sel=sel[0],out=layer1CDoutbin1);
    Mux(a=c[2],b=d[2],sel=sel[0],out=layer1CDoutbin2);
    Mux(a=c[3],b=d[3],sel=sel[0],out=layer1CDoutbin3);
    Mux(a=c[4],b=d[4],sel=sel[0],out=layer1CDoutbin4);
    Mux(a=c[5],b=d[5],sel=sel[0],out=layer1CDoutbin5);
    Mux(a=c[6],b=d[6],sel=sel[0],out=layer1CDoutbin6);
    Mux(a=c[7],b=d[7],sel=sel[0],out=layer1CDoutbin7);
    Mux(a=c[8],b=d[8],sel=sel[0],out=layer1CDoutbin8);
    Mux(a=c[9],b=d[9],sel=sel[0],out=layer1CDoutbin9);
    Mux(a=c[10],b=d[10],sel=sel[0],out=layer1CDoutbin10);
    Mux(a=c[11],b=d[11],sel=sel[0],out=layer1CDoutbin11);
    Mux(a=c[12],b=d[12],sel=sel[0],out=layer1CDoutbin12);
    Mux(a=c[13],b=d[13],sel=sel[0],out=layer1CDoutbin13);
    Mux(a=c[14],b=d[14],sel=sel[0],out=layer1CDoutbin14);
    Mux(a=c[15],b=d[15],sel=sel[0],out=layer1CDoutbin15);
    
    // Second Layer :
    // Mux(AB,CD,sel[1])

    Mux(a=layer1ABoutbin0,b=layer1CDoutbin0,sel=sel[1],out=out[0]);
    Mux(a=layer1ABoutbin1,b=layer1CDoutbin1,sel=sel[1],out=out[1]);
    Mux(a=layer1ABoutbin2,b=layer1CDoutbin2,sel=sel[1],out=out[2]);
    Mux(a=layer1ABoutbin3,b=layer1CDoutbin3,sel=sel[1],out=out[3]);
    Mux(a=layer1ABoutbin4,b=layer1CDoutbin4,sel=sel[1],out=out[4]);
    Mux(a=layer1ABoutbin5,b=layer1CDoutbin5,sel=sel[1],out=out[5]);
    Mux(a=layer1ABoutbin6,b=layer1CDoutbin6,sel=sel[1],out=out[6]);
    Mux(a=layer1ABoutbin7,b=layer1CDoutbin7,sel=sel[1],out=out[7]);
    Mux(a=layer1ABoutbin8,b=layer1CDoutbin8,sel=sel[1],out=out[8]);
    Mux(a=layer1ABoutbin9,b=layer1CDoutbin9,sel=sel[1],out=out[9]);
    Mux(a=layer1ABoutbin10,b=layer1CDoutbin10,sel=sel[1],out=out[10]);
    Mux(a=layer1ABoutbin11,b=layer1CDoutbin11,sel=sel[1],out=out[11]);
    Mux(a=layer1ABoutbin12,b=layer1CDoutbin12,sel=sel[1],out=out[12]);
    Mux(a=layer1ABoutbin13,b=layer1CDoutbin13,sel=sel[1],out=out[13]);
    Mux(a=layer1ABoutbin14,b=layer1CDoutbin14,sel=sel[1],out=out[14]);
    Mux(a=layer1ABoutbin15,b=layer1CDoutbin15,sel=sel[1],out=out[15]);

}